

# TODO right now just a few standard linux locations.
FIND_PATH(ROBOT3D_DIR include/srCore/simulationEntryPoint.h
    PATHS
    /usr/local
    /usr
    /opt
)


FIND_PATH(ROBOT3D_INCLUDE_DIR NAMES srCore/simulationEntryPoint.h
    PATHS
       ${ROBOT3D_DIR}
    PATH_SUFFIXES
       include
)


FIND_PATH(ROBOT3D_LIB_DIR NAMES libsrCore.so libsrCore_d.so
    PATHS
       ${ROBOT3D_DIR}
       /usr/local/lib
       /usr/local/lib64
    PATH_SUFFIXES
       Build/lib
       Debug/lib
       Release/lib
       lib
       lib64
   NO_DEFAULT_PATH
)

MACRO(FIND_ROBOT3D_LIBRARY MYLIBRARY MYLIBRARYNAME)

    FIND_LIBRARY(${MYLIBRARY}
        NAMES ${MYLIBRARYNAME}
        PATHS
        ${ROBOT3D_LIB_DIR}
        /usr/local/lib
        /usr/lib
        /opt/local/lib
        /opt/lib
    )

ENDMACRO(FIND_ROBOT3D_LIBRARY LIBRARY LIBRARYNAME)


# Find release (optimized) libs
FIND_ROBOT3D_LIBRARY(ROBOT3D_LIBRARY Robot3D)
FIND_ROBOT3D_LIBRARY(SRACTUATOR_LIBRARY srActuator)
FIND_ROBOT3D_LIBRARY(SRBODY_LIBRARY srBody)
FIND_ROBOT3D_LIBRARY(SRCORE_LIBRARY srCore)
FIND_ROBOT3D_LIBRARY(SRFACTORY_LIBRARY srFactory)
FIND_ROBOT3D_LIBRARY(SRROBOT_LIBRARY srRobot)
FIND_ROBOT3D_LIBRARY(SRSENSOR_LIBRARY srSensor)


# Find debug libs
FIND_ROBOT3D_LIBRARY(ROBOT3D_LIBRARY_DEBUG Robot3D_d)
FIND_ROBOT3D_LIBRARY(SRACTUATOR_LIBRARY_DEBUG srActuator_d)
FIND_ROBOT3D_LIBRARY(SRBODY_LIBRARY_DEBUG srBody_d)
FIND_ROBOT3D_LIBRARY(SRCORE_LIBRARY_DEBUG srCore_d)
FIND_ROBOT3D_LIBRARY(SRFACTORY_LIBRARY_DEBUG srFactory_d)
FIND_ROBOT3D_LIBRARY(SRROBOT_LIBRARY_DEBUG srRobot_d)
FIND_ROBOT3D_LIBRARY(SRSENSOR_LIBRARY_DEBUG srSensor_d)


# TODO check this!
SET(ROBOT3D_FOUND "NO")
IF(ROBOT3D_LIBRARY AND ROBOT3D_INCLUDE_DIR)
    SET(ROBOT3D_FOUND "YES")
ENDIF(ROBOT3D_LIBRARY AND ROBOT3D_INCLUDE_DIR)

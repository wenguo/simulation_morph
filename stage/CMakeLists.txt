find_package( FLTK REQUIRED )
IF( FLTK_FOUND )
  MESSAGE( STATUS ${INDENT} "FLTK_LIBRARIES=${FLTK_LIBRARIES}" )
  MESSAGE( STATUS ${INDENT} "FLTK_INCLUDE_DIR=${FLTK_INCLUDE_DIR}" )
ELSE( FLTK_FOUND )
  MESSAGE( FATAL_ERROR "FLTK not found, aborting" )
ENDIF( FLTK_FOUND )

find_package( OpenGL REQUIRED )
IF(OPENGL_GLU_FOUND)
    MESSAGE( STATUS ${INDENT} "OPENGL_LIBRARIES=${OPENGL_LIBRARIES}" )
    MESSAGE( STATUS ${INDENT} "OPENGL_INCLUDE_DIR=${OPENGL_INCLUDE_DIR}" )
ELSE(OPENGL_GLU_FOUND )
  MESSAGE( FATAL_ERROR "OpenGL GLU not found, aborting" )
ENDIF(OPENGL_GLU_FOUND )

INCLUDE(FindPkgConfig)
PKG_SEARCH_MODULE(STAGE REQUIRED stage)


INCLUDE_DIRECTORIES(${STAGE_INCLUDE_DIRS} ${FLTK_INCLUDE_DIRS} ${OPENGL_INCLUDE_DIR} ${ROBOT_BASE_INCLUDE_DIR})
LINK_DIRECTORIES(${STAGE_LIBRARY_DIRS} ${FLTK_LIBRARY_DIRS} ${OPENGL_LIBRARY_DIRS} ${ROBOT_BASE_LIBRARY_DIR})


SET(morph_stage morphStage)

ADD_LIBRARY(${morph_stage} MODULE
   stage_main.cc
   stage_robot.cc
   )

TARGET_LINK_LIBRARIES(${morph_stage} ${STAGE_LIBRARIES} ${FLTK_LIBRARIES} ${OPENGL_LIBRARIES} ${ROBOT_BASE_LIBRARY})
SET_TARGET_PROPERTIES(${morph_stage} PROPERTIES PREFIX "" )
INSTALL(TARGETS ${morph_stage} DESTINATION /usr/local/lib64/Stage-4.0)
